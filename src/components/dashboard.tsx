/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/8U9WR6inWTG
 */
import Link from "next/link"
import { RemoveButton } from "./client/remove-button"


async function getProducts() {
  const res = await fetch('http://localhost:3002/products', { next: {
    tags: ['products']
  }})
  // The return value is *not* serialized
  // You can return Date, Map, Set, etc.

  if (!res.ok) {
    // This will activate the closest `error.js` Error Boundary
    throw new Error('Failed to fetch data')
  }

  return res.json()
}

type Product = {
  type: string;
  name: string;
  calories: string;
  nutritionalHighlight: string;
  price: number;
  id: string
}

export async function Dashboard() {
  const { products } = await getProducts()
  return (
    <div className="h-screen flex flex-col bg-green-500 p-6">
      <header className="flex justify-between items-center mb-6">
        <Link className="text-2xl font-bold text-white" href="/dashboard">Dashboard</Link>
        <Link className="text-xl font-bold p-2 text-white border border-slate-300 rounded-md hover:border-slate-100" href="/dashboard/add">Add Ingredient</Link>
      </header>
      <table className="bg-white rounded-lg shadow-md">
        <thead>
          <tr>
            <th className="text-center p-1">Name</th>
            <th className="text-center p-1">Type</th>
            <th className="text-center p-1">Calories</th>
            <th className="text-center p-1">Nutrition</th>
            <th className="text-center p-1">Price</th>
            <th className="text-center p-1">Actions</th>
          </tr>
          </thead>
        <tbody>
          {
            products.map((product: Product) => (
              <tr key={product.id}>
                <td className="text-center p-1">{product.name}</td>
                <td className="text-center p-1">{product.type}</td>
                <td className="text-center p-1">{product.calories}</td>
                <td className="text-center p-1">{product.nutritionalHighlight}</td>
                <td className="text-center p-1">{product.price}</td>
                <td className="text-center p-1">
                  <Link className="p-2  rounded bg-green-500 hover:bg-green-600 text-white" href={`/dashboard/edit/${product.id}`}>Edit</Link>
                  <RemoveButton id={product.id}/>
                </td>
              </tr>
            ))
          }
          </tbody>
      </table>
    </div>
  )
}


